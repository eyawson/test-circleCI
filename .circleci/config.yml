version: 2.1
commands:
  print_pipeline_id:
    description: "Print out an ID number"
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
  run_yarn_install:
    description: "Install dependencies"
    steps:
      - run: npm install
orbs:
  node: circleci/node@3.0.0
jobs:
  build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm install
            npm run lint
            npm build
      - print_pipeline_id

  test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout

      - run_yarn_install
      - run: npm run test
  analyze:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run_yarn_install
      - print_pipeline_id

  create-infra:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create cloudformation stack
          command: |
            aws cloudformation deploy --stack-name ciDeploy --template-file template.yml
  deploy:
    docker:
      - image: python:3.8.6-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["7c:83:b4:97:06:60:d4:d6:5d:af:c3:e5:4d:68:a0:b6"]
      - run:
          name: Install ansible dependencies
          command: |

            # apt install software-properties-common
            # apt-add-repository --yes --update ppa:ansible/ansible
            # apt install ansible
            apk add --update ansible
      # - run:
      #     name: add ec2 instance IP to inventory
      #     command: |
      #       echo "[all]" > inventory
      #       aws ec2 describe-instances \
      #       --query 'Reservations[*].Instances[*].PublicIpAddress' \
      #       --output text >> inventory
      - run:
          name: run ansible playbook
          command: |
            echo "host_key_checking = False" >> /etc/ansible/ansible.cfg
            ansible-playbook main-remote.yml -i inventory  # --ansible_ssh_common_args='-o StrictHostKeyChecking=no'

workflows:
  build-deploy:
    jobs:
      - build
      - test
      - analyze
      # - create-infra:
      #     context:
      #       - AWS
      #     filters:
      #       branches:
      #         only: master
      - deploy:
          requires: [build]
          filters:
            branches:
              only: master
